<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>false</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_228286_onesphere_ansible_awx</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition table="x_228286_onesphere_ansible_awx">status!=pending^EQ<item endquery="false" field="status" goto="false" newquery="false" operator="!=" or="false" value="pending"/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </filter_condition>
        <is_rest>false</is_rest>
        <message/>
        <name>3par_update_ritm_status</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[function get_jobId(current_sys_id)
{
    
	var target = new GlideRecord('x_228286_onesphere_ansible_awx');
	target.addQuery('sys_id', current_sys_id);
	target.query(); // Issue the query to the database to get all records 
	while (target.next()) { 
		// add code here to process the incident record 		
	}	
	return target.sys_id; 
}

function get_ritm(job_id)
{
	var target = new GlideRecord('x_228286_onesphere_3par');
	target.addQuery('job_id', job_id);
	target.query(); // Issue the query to the database to get all records 
	while (target.next()) { 
		// add code here to process the incident record 		
	}	
	return target.ritm; 

}

function update_ritm(ritm)
{
   var rec = new GlideRecord('sc_req_item') ;
	rec.addQuery('sys_id',ritm);
	rec.query(); 
	while(rec.next()) { 
		rec.state= 3;		
		rec.update(); }
}
(function executeRule(current, previous /*null when async*/) {

	// Add your code here
	//sys_id = get_jobId(current.sys_id);
	//gs.info(sys_id);
	ritm = get_ritm(current.sys_id);
	gs.info(ritm);

	update_ritm(ritm);
	

})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2019-09-26 10:19:51</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>d30d8afedb84001075fecc30399619ee</sys_id>
        <sys_mod_count>1</sys_mod_count>
        <sys_name>3par_update_ritm_status</sys_name>
        <sys_overrides/>
        <sys_package display_value="OneSphere Integration" source="x_228286_onesphere">0d703a034f161300fb4cb82ca310c79e</sys_package>
        <sys_policy/>
        <sys_scope display_value="OneSphere Integration">0d703a034f161300fb4cb82ca310c79e</sys_scope>
        <sys_update_name>sys_script_d30d8afedb84001075fecc30399619ee</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2019-09-26 10:26:00</sys_updated_on>
        <template/>
        <when>async</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=d30d8afedb84001075fecc30399619ee"/>
</record_update>
