<?xml version="1.0" encoding="UTF-8"?>
<record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>package_private</access>
        <active>true</active>
        <api_name>x_228286_onesphere.ListNetworks</api_name>
        <client_callable>true</client_callable>
        <description/>
        <name>ListNetworks</name>
        <script><![CDATA[var ListNetworks = Class.create();
ListNetworks.prototype = Object.extendsObject(global.AbstractAjaxProcessor, {
	
	process : function()
	{
		var oneSphereUri = "https://deic-gse03-hpe.hpeonesphere.com";
        var oneSphereUser = "soibam.ana.singh@hpe.com";
        var oneSpherePassword = "GSE#admin1";
        var authToken = null;        
		
		 //Get Authentication token
		oneSphereUser = '\"'+oneSphereUser+'\"';
        oneSpherePassword = '\"'+oneSpherePassword +'\"';
        var Session_request = new sn_ws.RESTMessageV2();
        Session_request.setHttpMethod('post');
        Session_request.setEndpoint(oneSphereUri+'/rest/session');
        Session_request.setRequestHeader("Content-Type","application/json");
        var body = '{"username":'+oneSphereUser+',"password":'+oneSpherePassword+'}';
        Session_request.setRequestBody(body);
        var Auth_response = Session_request.execute();
        var httpResponseStatus = Auth_response.getStatusCode();
        var responseBody = Auth_response.getBody();
        session = JSON.parse(responseBody);
		authToken = session.token;
		
		//Get parameters from UI client
		var favour = this.getParameter('sysparm_services');
		var project = this.getParameter('sysparm_project');
		  
		gs.info("Selected favour" +favour);
		gs.info("Selected project" +project);
		
		 //Get Project URI
		var projectRequest = new sn_ws.RESTMessageV2();
		projectRequest.setEndpoint(oneSphereUri+'/rest/projects?userQuery=' +project);
		projectRequest.setHttpMethod('get');
		projectRequest.setRequestHeader("Content-Type","application/json");
		projectRequest.setRequestHeader("Authorization", authToken);
		var projectRequestGetResponse = projectRequest.execute();
		var projectRequestResponseBody = projectRequestGetResponse.getBody();
		var projects = JSON.parse(projectRequestResponseBody);
		var projectUri = projects.members[0].uri;
		gs.info("Project URI" +projectUri);
				
		//Get Zone URI
		var servicesRequest = new sn_ws.RESTMessageV2();
        servicesRequest.setEndpoint(oneSphereUri+'/rest/services?userQuery=' +favour);
        servicesRequest.setHttpMethod('get');
        servicesRequest.setRequestHeader("Content-Type","application/json");
        servicesRequest.setRequestHeader("Authorization", authToken);
        var servicesRequestGetResponse = servicesRequest.execute();
        var servicesRequestResponseBody = servicesRequestGetResponse.getBody();
        var services = JSON.parse(servicesRequestResponseBody);		
		var zoneUri = services.members[0].zoneUri;
		//var serviceUri = services.members[0].uri;
		gs.info("Zone URI" +zoneUri);
		//gs.info(serviceUri);
		
		var networksRequest = new sn_ws.RESTMessageV2();
		networksRequest.setEndpoint(oneSphereUri+'/rest/networks?query=zoneUri+EQ+' +zoneUri+ 'AND' +'projectUri+EQ+' +projectUri);
		networksRequest.setHttpMethod('get');
		networksRequest.setRequestHeader("Content-Type","application/json");
		networksRequest.setRequestHeader("Authorization", authToken);
		var networksRequestGetResponse = networksRequest.execute();
		var networksRequestResponseBody = networksRequestGetResponse.getBody();
		var networks = JSON.parse(networksRequestResponseBody);
		//var profiles = zones.members[0].name;   		
		
		var key;
		var array = [];
		var i = 0;
	    for (key in networks.members) 
	    {
		     array[i] = networks.members[key].name;
			 i++;
		}
		gs.info("List of networks attached to project : " + JSON.stringify(array));
		
		if (authToken != null)
			{
				try {
		oneSphereUser = '\"'+oneSphereUser+'\"';
        oneSpherePassword = '\"'+oneSpherePassword +'\"';
        Session_request = new sn_ws.RESTMessageV2();
        Session_request.setHttpMethod('delete');
        Session_request.setEndpoint(oneSphereUri+'/rest/session');
        Session_request.setRequestHeader("Content-Type","application/json");
        Session_request.setRequestHeader("Authorization", String(authToken));

        Auth_response = Session_request.execute();
        httpResponseStatus = Auth_response.getStatusCode();
	}
	catch (ex) {
		var message = Auth_response.getErrorMessage();
        gs.error("Error while delete session: " +message);
	}
			}

		return JSON.stringify(array);
	},
	
	

    type: 'ListNetworks'
});]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>anando</sys_created_by>
        <sys_created_on>2018-08-08 06:13:50</sys_created_on>
        <sys_id>e1e215a5dbfb930071ec771c8c9619a3</sys_id>
        <sys_mod_count>9</sys_mod_count>
        <sys_name>ListNetworks</sys_name>
        <sys_package display_value="OneSphere Integration" source="x_228286_onesphere">0d703a034f161300fb4cb82ca310c79e</sys_package>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="OneSphere Integration">0d703a034f161300fb4cb82ca310c79e</sys_scope>
        <sys_update_name>sys_script_include_e1e215a5dbfb930071ec771c8c9619a3</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2018-11-01 04:42:33</sys_updated_on>
    </sys_script_include>
</record_update>
