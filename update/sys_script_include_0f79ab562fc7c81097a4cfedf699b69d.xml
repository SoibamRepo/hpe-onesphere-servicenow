<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>package_private</access>
        <active>true</active>
        <api_name>x_228286_onesphere.UpdateJobStatus</api_name>
        <caller_access/>
        <client_callable>true</client_callable>
        <description/>
        <name>UpdateJobStatus</name>
        <script><![CDATA[var UpdateJobStatus = Class.create();
UpdateJobStatus.prototype = Object.extendsObject(global.AbstractAjaxProcessor, {
process: function() { 
	
	var job_number = this.getParameter('sysparm_job_id');
	gs.info("Job ID" + job_number);
	
	var target = {};
	target = new GlideRecord('x_228286_onesphere_environment_credentials');
	target.addQuery('number', 'AWX');
	target.query(); 
	while (target.next()) { 
		// code 
	}	
	user = target.user;
	password = target.password.getDecryptedValue();
	token = target.token.getDecryptedValue();
	url = target.onesphere_url;
	ansibleTower = url + 'jobs/' + job_number;
	
	gs.info("ansibleTower" + ansibleTower);
	gs.info("User name" + " " + user);
	gs.info("Password" + " " + password);
	//gs.info("Token" + " " + token);
	
	var request = new sn_ws.RESTMessageV2();
	request.setEndpoint(ansibleTower);				
	request.setHttpMethod('GET');    
	
	var auth = 'Bearer' + ' ' + token;
	auth =  '' + auth + '';
	gs.info("Token" + " " + token);
	
	
	//request.setBasicAuth(user,password);
	request.setRequestHeader("Accept","application/json");   		
	request.setRequestHeader('Content-Type','application/json');
    request.setRequestHeader('Authorization', auth);
	request.setMIDServer('t-system-new');
	request.setEccParameter('skip_sensor', true);
	var response = request.executeAsync();
	response.waitForResponse(120);
	var request_response_body = response.getBody();                                
    var json = JSON.parse(request_response_body);		
	status = json.status;
	gs.info("Status" + status);
	
	/*
	var target = new GlideRecord('incident');
	target.addQuery('number', 'INC0009009');
	target.query(); 
	while (target.next()) { 
		// code 
	}	
	des = target.short_description;
	gs.info("Description" + des);	
	*/
	
	target = new GlideRecord('x_228286_onesphere_ansible_awx');
	target.addQuery('job_id', job_number);
	target.query(); 
	while (target.next()) { 
		// code 
	}	
	sys_id = target.sys_id;
	gs.info("System ID" + sys_id);	
	
	var gr = new GlideRecord('x_228286_onesphere_ansible_awx');
    gr.get(sys_id);
    gr.status=status;
    gr.update();	
},
	

    type: 'UpdateJobStatus'
});]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2020-02-21 06:53:15</sys_created_on>
        <sys_id>0f79ab562fc7c81097a4cfedf699b69d</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>UpdateJobStatus</sys_name>
        <sys_package display_value="OneSphere Integration" source="x_228286_onesphere">0d703a034f161300fb4cb82ca310c79e</sys_package>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="OneSphere Integration">0d703a034f161300fb4cb82ca310c79e</sys_scope>
        <sys_update_name>sys_script_include_0f79ab562fc7c81097a4cfedf699b69d</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2020-02-21 06:53:15</sys_updated_on>
    </sys_script_include>
</record_update>
