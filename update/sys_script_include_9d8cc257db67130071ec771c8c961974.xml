<?xml version="1.0" encoding="UTF-8"?>
<record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>package_private</access>
        <active>true</active>
        <api_name>x_228286_onesphere.HelloWorld</api_name>
        <client_callable>true</client_callable>
        <description>OneSphere - Get List of Private Cloud zones.</description>
        <name>HelloWorld</name>
        <script><![CDATA[/*
	# Copyright (2018-2019) Hewlett Packard Enterprise Development LP
	#
	# Licensed under the Apache License, Version 2.0 (the "License");
	# You may not use this file except in compliance with the License.
	# You may obtain a copy of the License at
	#
	# http://www.apache.org/licenses/LICENSE-2.0

	#
	# Unless required by applicable law or agreed to in writing, software
	# distributed under the License is distributed on an "AS IS" BASIS,
	# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	# See the License for the specific language governing permissions and
	# limitations under the License.
*/
/*
Authors: Soibam Anando Singh
*/
var HelloWorld = Class.create();
HelloWorld.prototype = Object.extendsObject(global.AbstractAjaxProcessor, {
	
	test : function() {	
	
	// Declare OneSphere credentials	
	var oneSphereUri = "https://deic-gse04-hpe.hpeonesphere.com";
    var oneSphereUser = "soibam.ana.singh@hpe.com";
    var oneSpherePassword = "GSE#admin1";
	
	//Generate OneSphere Authentication token	
	oneSphereUser = '\"'+oneSphereUser+'\"';
    oneSpherePassword = '\"'+oneSpherePassword +'\"';
    var Session_request = new sn_ws.RESTMessageV2();
    Session_request.setHttpMethod('post');
    Session_request.setEndpoint(oneSphereUri+'/rest/session');
    Session_request.setRequestHeader("Content-Type","application/json");
    var body = '{"username":'+oneSphereUser+',"password":'+oneSpherePassword+'}';
    Session_request.setRequestBody(body);
    var Auth_response = Session_request.execute();
    var httpResponseStatus = Auth_response.getStatusCode();
    var responseBody = Auth_response.getBody();
    session = JSON.parse(responseBody);
    authToken = session.token;
	
	//Get Private Cloud(vmware) provider uri	
	var providerUri = "";	
	var projectUri = new sn_ws.RESTMessageV2();
    projectUri.setHttpMethod('get');
    projectUri.setEndpoint(oneSphereUri+'/rest/providers?query=providerTypeUri+EQ+/rest/provider-types/ncs&view=full');
    projectUri.setRequestHeader("Content-Type","application/json");
    projectUri.setRequestHeader("Authorization", authToken);
    var projectUriGetResponse = projectUri.execute();
    var projectUriResponseBody = projectUriGetResponse.getBody();
    var uri = JSON.parse(projectUriResponseBody);     
    providerUri = uri.members[0].uri;
    gs.info("Private Cloud providerUri" + providerUri);
    
	//Get list of regions/zones availble in Private Cloud	
	var regionsList = new sn_ws.RESTMessageV2();
    regionsList.setEndpoint(oneSphereUri+'/rest/zones?query=providerUri+EQ+'+providerUri);
    regionsList.setHttpMethod('get');
    regionsList.setRequestHeader("Content-Type","application/json");
    regionsList.setRequestHeader("Authorization", authToken);
    var regionsListGetResponse = regionsList.execute();
    var regionsListResponseBody = regionsListGetResponse.getBody();
    var regions = JSON.parse(regionsListResponseBody);
    var key;
	var regions_arry = [];	
	var i = 0;
	var array = [];	
	var obj = [];
	var j = 0;
    for (key in regions.members) 
    {
		/* 
		var object = {};
         regionName = regions.members[key].name;
		 gs.info("regionName" + regionName);
		 regions_arry[i] = regions.members[key].name;
		 i++;
		 object.zone = regions.members[key].name;
		 */
		 //object.uri = regions.members[key].uri;
		 		 
		 var zoneUri = regions.members[key].uri;
		 var regionsUriList = new sn_ws.RESTMessageV2();		 
		 regionsUriList.setEndpoint(oneSphereUri+'/rest/networks?query=zoneUri+EQ+'+zoneUri);
		 regionsUriList.setHttpMethod('get');
		 regionsUriList.setRequestHeader("Content-Type","application/json");
		 regionsUriList.setRequestHeader("Authorization", authToken);
		 var regionsUriGetResponse = regionsUriList.execute();
		 var regionsUriResponseBody = regionsUriGetResponse.getBody();
		 var regionsUri = JSON.parse(regionsUriResponseBody);
		 var key1;
		 for (key1 in regionsUri.members)
		 {
			 /*
			 object.network = regionsUri.members[key1].name;
			 gs.info("object.network" + object.network);
			 */
			 obj[j] = regionsUri.members[key1].name;
			 j++;
			 //this.wait(3000);
		 }
		 
		 //array.push(object);
		 //this.wait(3000);
		 
    }
	gs.info("JSON.stringify : " + JSON.stringify(obj));
    //return JSON.stringify(array);
	  return JSON.stringify(obj);	
	//return "Hi from Script Include !!";
		
		
},
	wait : function(ms){
		gs.info("Inside wait function");
		var start = new Date().getTime();
     
   var end = start;
   while(end < start + ms) 
   {
     end = new Date().getTime();
   }
		
	},

    type: 'HelloWorld'
});]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>anando</sys_created_by>
        <sys_created_on>2018-08-01 10:41:58</sys_created_on>
        <sys_id>9d8cc257db67130071ec771c8c961974</sys_id>
        <sys_mod_count>32</sys_mod_count>
        <sys_name>HelloWorld</sys_name>
        <sys_package display_value="OneSphere Integration" source="x_228286_onesphere">0d703a034f161300fb4cb82ca310c79e</sys_package>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="OneSphere Integration">0d703a034f161300fb4cb82ca310c79e</sys_scope>
        <sys_update_name>sys_script_include_9d8cc257db67130071ec771c8c961974</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2019-02-08 01:29:36</sys_updated_on>
    </sys_script_include>
</record_update>
