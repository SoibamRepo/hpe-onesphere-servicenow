<?xml version="1.0" encoding="UTF-8"?>
<record_update sys_domain="global" table="sys_ui_action">
    <sys_ui_action action="INSERT_OR_UPDATE">
        <action_name>u_deleteProject</action_name>
        <active>true</active>
        <client>true</client>
        <comments/>
        <condition/>
        <form_action>true</form_action>
        <form_button>true</form_button>
        <form_context_menu>true</form_context_menu>
        <form_link>true</form_link>
        <form_style/>
        <hint/>
        <list_action>true</list_action>
        <list_banner_button>false</list_banner_button>
        <list_button>false</list_button>
        <list_choice>true</list_choice>
        <list_context_menu>false</list_context_menu>
        <list_link>false</list_link>
        <list_save_with_form_button>false</list_save_with_form_button>
        <list_style/>
        <name>Delete Project</name>
        <onclick>deleteProject()</onclick>
        <order>100</order>
        <script><![CDATA[function deleteProject()
{
	var state = g_form.getValue('state');
	//alert(state);
	if (state == 'Success')
	gsftSubmit(null, g_form.getFormElement(), 'u_deleteProject');	
}
if(typeof window == 'undefined')
   serverDeleteProject();

function serverDeleteProject(){
	//SNOW and OneShere credentials
	var oneSphereUri = "https://deic-gse02-hpe.hpeonesphere.com";
    var oneSphereUser = "soibam.ana.singh@hpe.com";
    var oneSpherePassword = "GSE#admin1";
    var SnowUri = 'https://dev40986.service-now.com';
    var SnowUser = 'admin';
    var SnowPassword = 'Servicenow@531982;';
    var authToken = null;
	var projectId = null;
	
	//Authentication Token
	oneSphereUser = '\"'+oneSphereUser+'\"';
    oneSpherePassword = '\"'+oneSpherePassword +'\"';
    var Session_request = new sn_ws.RESTMessageV2();
    Session_request.setHttpMethod('post');
    Session_request.setEndpoint(oneSphereUri+'/rest/session');
    Session_request.setRequestHeader("Content-Type","application/json");
    var body = '{"username":'+oneSphereUser+',"password":'+oneSpherePassword+'}';
    Session_request.setRequestBody(body);    

    var Auth_response = Session_request.execute();
    var httpResponseStatus = Auth_response.getStatusCode();
    var responseBody = Auth_response.getBody();
    session = JSON.parse(responseBody);
	authToken = session.token;
	
	var projectName = current.project_name;
	gs.info("Project Name"+ ' ' +projectName);
	var projectRequest = new sn_ws.RESTMessageV2();
	projectRequest.setEndpoint(oneSphereUri+'/rest/projects?userQuery=' + projectName);
	projectRequest.setHttpMethod('get');
	projectRequest.setRequestHeader("Content-Type","application/json");
	projectRequest.setRequestHeader("Authorization", authToken);
	Response = projectRequest.execute();
	ResponseBody = Response.getBody();
    gs.info(ResponseBody);			
	var projectDetails =   JSON.parse(ResponseBody);
	projectId = projectDetails.members[0].id;
	gs.info("Project ID" + ' ' +projectId);
	
	var requestProviders = new sn_ws.RESTMessageV2();
	requestProviders.setEndpoint(oneSphereUri+'/rest/providers?query=projectUri+EQ+/rest/projects/' +projectId);
	requestProviders.setHttpMethod('get');
	requestProviders.setRequestHeader("Content-Type","application/json");
	requestProviders.setRequestHeader("Authorization", authToken);
	Response = requestProviders.execute();
	ResponseBody = Response.getBody();
    gs.info(ResponseBody);
	var providerDetails =   JSON.parse(ResponseBody);
	count = providerDetails.count;
	gs.info("Count" + ' ' +count );
	
	if ( count > 0)
	{
			gs.info("Delete providers");
			var key;
			for (key in providerDetails.members)
			{
				providerId = providerDetails.members[key].id;
				gs.info("Provider ID" + ' ' +providerId);
				//deleteProviders(authToken,providerId);
				var Providers = new sn_ws.RESTMessageV2();
	Providers.setEndpoint(oneSphereUri+'/rest/providers/' +providerId);
	Providers.setHttpMethod('delete');
	Providers.setRequestHeader("Content-Type","application/json");
	Providers.setRequestHeader("Authorization", authToken);
	Response = Providers.execute();
	ResponseBody = Response.getBody();
   	json =   JSON.parse(ResponseBody);
				
			}
             
    }	
	
	var requestProject = new sn_ws.RESTMessageV2();
	requestProject.setEndpoint(oneSphereUri+'/rest/projects/' +projectId);
	requestProject.setHttpMethod('delete');
	requestProject.setRequestHeader("Content-Type","application/json");
	requestProject.setRequestHeader("Authorization", authToken);
	Response = requestProject.execute();
	ResponseBody = Response.getBody();
    json =   JSON.parse(ResponseBody);
	
	//update project state on SNOW
	var sysId = current.sys_id;
	gs.info("Current sys_id"+ ' ' +sysId);
	
	var userRequest = new sn_ws.RESTMessageV2();
    userRequest.setEndpoint(SnowUri+'/api/now/table/x_228286_onesphere_onesphere_project/' +sysId);
	//userRequest.setEndpoint(SnowUri+'/api/now/table/x_228286_onesphere_virtual_machines/' +sysId);
    userRequest.setHttpMethod('put');
    userRequest.setBasicAuth(SnowUser,SnowPassword);
    userRequest.setRequestHeader("Content-Type","application/json");
    var vmRequestBody = '{"state":\"Removing\"}';
    userRequest.setRequestBody(vmRequestBody);
    var userGetResponse = userRequest.execute();
    gs.info(userGetResponse.getBody());	
	
	if (authToken != null)
{
        try {
		oneSphereUser = '\"'+oneSphereUser+'\"';
        oneSpherePassword = '\"'+oneSpherePassword +'\"';
        Session_request = new sn_ws.RESTMessageV2();
        Session_request.setHttpMethod('delete');
        Session_request.setEndpoint(oneSphereUri+'/rest/session');
        Session_request.setRequestHeader("Content-Type","application/json");
        Session_request.setRequestHeader("Authorization", String(authToken));

        Auth_response = Session_request.execute();
        httpResponseStatus = Auth_response.getStatusCode();
	}
	catch (ex) {
		var message = Auth_response.getErrorMessage();
        gs.error("Error while delete session: " +message);
	}
}
	
}
/*
function deleteProject(authToken,projectId)
{
    var requestProject = new sn_ws.RESTMessageV2();
	requestProject.setEndpoint(oneSphereUri+'/rest/projects/' +projectId);
	requestProject.setHttpMethod('delete');
	requestProject.setRequestHeader("Content-Type","application/json");
	requestProject.setRequestHeader("Authorization", authToken);
	Response = requestProject.execute();
	ResponseBody = Response.getBody();
    var json =   JSON.parse(ResponseBody);
	return json;
}
*/]]></script>
        <show_insert>false</show_insert>
        <show_multiple_update>false</show_multiple_update>
        <show_query>false</show_query>
        <show_update>true</show_update>
        <sys_class_name>sys_ui_action</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2018-08-14 17:35:03</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>7728a6afdb77170071ec771c8c961938</sys_id>
        <sys_mod_count>39</sys_mod_count>
        <sys_name>Delete Project</sys_name>
        <sys_overrides/>
        <sys_package display_value="OneSphere Integration" source="x_228286_onesphere">0d703a034f161300fb4cb82ca310c79e</sys_package>
        <sys_policy/>
        <sys_scope display_value="OneSphere Integration">0d703a034f161300fb4cb82ca310c79e</sys_scope>
        <sys_update_name>sys_ui_action_7728a6afdb77170071ec771c8c961938</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2018-08-17 14:24:01</sys_updated_on>
        <table>x_228286_onesphere_onesphere_project</table>
        <ui11_compatible>true</ui11_compatible>
        <ui16_compatible>false</ui16_compatible>
    </sys_ui_action>
</record_update>
